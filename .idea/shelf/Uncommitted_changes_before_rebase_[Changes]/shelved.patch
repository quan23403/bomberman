Index: src/main/java/uet/oop/bomberman/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package uet.oop.bomberman;\n\nimport javafx.application.Application;\nimport javafx.stage.Stage;\n\nimport java.io.IOException;\n\npublic class Main extends Application {\n    @Override\n    public void start(Stage stage) throws IOException {\n        BombermanGame game = new BombermanGame();\n        game.start(stage);\n    }\n\n    public static void main(String[] args) {\n        BombermanGame.main(args);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/Main.java b/src/main/java/uet/oop/bomberman/Main.java
--- a/src/main/java/uet/oop/bomberman/Main.java	(revision 69a4a72e6b6edba31d24f48f315792cd6b96774e)
+++ b/src/main/java/uet/oop/bomberman/Main.java	(date 1664202525590)
@@ -5,12 +5,8 @@
 
 import java.io.IOException;
 
-public class Main extends Application {
-    @Override
-    public void start(Stage stage) throws IOException {
-        BombermanGame game = new BombermanGame();
-        game.start(stage);
-    }
+public class Main {
+
 
     public static void main(String[] args) {
         BombermanGame.main(args);
Index: src/main/java/uet/oop/bomberman/entities/Wall.java
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/Wall.java b/src/main/java/uet/oop/bomberman/entities/Wall.java
deleted file mode 100644
--- a/src/main/java/uet/oop/bomberman/entities/Wall.java	(revision 69a4a72e6b6edba31d24f48f315792cd6b96774e)
+++ /dev/null	(revision 69a4a72e6b6edba31d24f48f315792cd6b96774e)
@@ -1,15 +0,0 @@
-package uet.oop.bomberman.entities;
-
-import javafx.scene.image.Image;
-
-public class Wall extends Entity {
-
-    public Wall(int x, int y, Image img) {
-        super(x, y, img);
-    }
-
-    @Override
-    public void update() {
-
-    }
-}
\ No newline at end of file
Index: src/main/java/uet/oop/bomberman/entities/Grass.java
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/Grass.java b/src/main/java/uet/oop/bomberman/entities/Grass.java
deleted file mode 100644
--- a/src/main/java/uet/oop/bomberman/entities/Grass.java	(revision 69a4a72e6b6edba31d24f48f315792cd6b96774e)
+++ /dev/null	(revision 69a4a72e6b6edba31d24f48f315792cd6b96774e)
@@ -1,15 +0,0 @@
-package uet.oop.bomberman.entities;
-
-import javafx.scene.image.Image;
-
-public class Grass extends Entity {
-
-    public Grass(int x, int y, Image img) {
-        super(x, y, img);
-    }
-
-    @Override
-    public void update() {
-
-    }
-}
\ No newline at end of file
Index: src/main/java/uet/oop/bomberman/entities/tile/destroyable/Brick.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/tile/destroyable/Brick.java b/src/main/java/uet/oop/bomberman/entities/tile/destroyable/Brick.java
new file mode 100644
--- /dev/null	(date 1664177712990)
+++ b/src/main/java/uet/oop/bomberman/entities/tile/destroyable/Brick.java	(date 1664177712990)
@@ -0,0 +1,4 @@
+package uet.oop.bomberman.entities.tile.destroyable;
+
+public class Brick {
+}
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1664177648755)
+++ b/.idea/uiDesigner.xml	(date 1664177648755)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/uet/oop/bomberman/BombermanGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package uet.oop.bomberman;\n\nimport javafx.animation.AnimationTimer;\nimport javafx.application.Application;\nimport javafx.scene.Group;\nimport javafx.scene.Scene;\nimport javafx.scene.canvas.Canvas;\nimport javafx.scene.canvas.GraphicsContext;\nimport javafx.stage.Stage;\nimport uet.oop.bomberman.entities.Bomber;\nimport uet.oop.bomberman.entities.Entity;\nimport uet.oop.bomberman.entities.Grass;\nimport uet.oop.bomberman.entities.Wall;\nimport uet.oop.bomberman.graphics.Sprite;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class BombermanGame extends Application {\n\n    public static final int WIDTH = 20;\n    public static final int HEIGHT = 15;\n\n    private GraphicsContext gc;\n    private Canvas canvas;\n    private List<Entity> entities = new ArrayList<>();\n    private List<Entity> stillObjects = new ArrayList<>();\n\n\n    public static void main(String[] args) {\n        Application.launch(BombermanGame.class);\n    }\n\n    @Override\n    public void start(Stage stage) {\n        // Tao Canvas\n        canvas = new Canvas(Sprite.SCALED_SIZE * WIDTH, Sprite.SCALED_SIZE * HEIGHT);\n        gc = canvas.getGraphicsContext2D();\n\n        // Tao root container\n        Group root = new Group();\n        root.getChildren().add(canvas);\n\n        // Tao scene\n        Scene scene = new Scene(root);\n\n        // Them scene vao stage\n        stage.setScene(scene);\n        stage.show();\n\n        AnimationTimer timer = new AnimationTimer() {\n            @Override\n            public void handle(long l) {\n                render();\n                update();\n            }\n        };\n        timer.start();\n\n        createMap();\n\n        Entity bomberman = new Bomber(1, 1, Sprite.player_right.getFxImage());\n        entities.add(bomberman);\n    }\n\n    public void createMap() {\n        for (int i = 0; i < WIDTH; i++) {\n            for (int j = 0; j < HEIGHT; j++) {\n                Entity object;\n                if (j == 0 || j == HEIGHT - 1 || i == 0 || i == WIDTH - 1) {\n                    object = new Wall(i, j, Sprite.wall.getFxImage());\n                }\n                else {\n                    object = new Grass(i, j, Sprite.grass.getFxImage());\n                }\n                stillObjects.add(object);\n            }\n        }\n    }\n\n    public void update() {\n        entities.forEach(Entity::update);\n    }\n\n    public void render() {\n        gc.clearRect(0, 0, canvas.getWidth(), canvas.getHeight());\n        stillObjects.forEach(g -> g.render(gc));\n        entities.forEach(g -> g.render(gc));\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/BombermanGame.java b/src/main/java/uet/oop/bomberman/BombermanGame.java
--- a/src/main/java/uet/oop/bomberman/BombermanGame.java	(revision 69a4a72e6b6edba31d24f48f315792cd6b96774e)
+++ b/src/main/java/uet/oop/bomberman/BombermanGame.java	(date 1664177676373)
@@ -7,10 +7,10 @@
 import javafx.scene.canvas.Canvas;
 import javafx.scene.canvas.GraphicsContext;
 import javafx.stage.Stage;
-import uet.oop.bomberman.entities.Bomber;
+import uet.oop.bomberman.entities.character.Bomber;
 import uet.oop.bomberman.entities.Entity;
-import uet.oop.bomberman.entities.Grass;
-import uet.oop.bomberman.entities.Wall;
+import uet.oop.bomberman.entities.tile.Grass;
+import uet.oop.bomberman.entities.tile.Wall;
 import uet.oop.bomberman.graphics.Sprite;
 
 import java.util.ArrayList;
Index: src/main/java/uet/oop/bomberman/entities/bomb/Flame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/bomb/Flame.java b/src/main/java/uet/oop/bomberman/entities/bomb/Flame.java
new file mode 100644
--- /dev/null	(date 1664202922445)
+++ b/src/main/java/uet/oop/bomberman/entities/bomb/Flame.java	(date 1664202922445)
@@ -0,0 +1,48 @@
+package uet.oop.bomberman.entities.bomb;
+
+import javafx.scene.image.Image;
+import uet.oop.bomberman.Board;
+import uet.oop.bomberman.entities.Entity;
+import uet.oop.bomberman.graphics.Screen;
+
+public class Flame extends Entity {
+    protected Board _board;
+    protected int _direction;
+    private int _radius;
+    protected int xOrigin, yOrigin;
+//    protected FlameSegment[] _flameSegments = new FlameSegment[0];
+
+    /**
+     *
+     * @param x hoành độ bắt đầu của Flame
+     * @param y tung độ bắt đầu của Flame
+     * @param direction là hướng của Flame
+     * @param radius độ dài cực đại của Flame
+     */
+    public Flame(int x, int y, int direction, int radius, Board board) {
+        super(x, y, (Image) null);
+        xOrigin = x;
+        yOrigin = y;
+        _x = x;
+        _y = y;
+        _direction = direction;
+        _radius = radius;
+        _board = board;
+//        createFlameSegments();
+    }
+
+    @Override
+    public void update() {
+
+    }
+
+    @Override
+    public void render(Screen screen) {
+
+    }
+
+    @Override
+    public boolean collide(Entity e) {
+        return false;
+    }
+}
Index: src/main/java/uet/oop/bomberman/entities/tile/destroyable/DestroyableTile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/tile/destroyable/DestroyableTile.java b/src/main/java/uet/oop/bomberman/entities/tile/destroyable/DestroyableTile.java
new file mode 100644
--- /dev/null	(date 1664203009310)
+++ b/src/main/java/uet/oop/bomberman/entities/tile/destroyable/DestroyableTile.java	(date 1664203009310)
@@ -0,0 +1,69 @@
+package uet.oop.bomberman.entities.tile.destroyable;
+
+import uet.oop.bomberman.entities.tile.Tile;
+import uet.oop.bomberman.graphics.Screen;
+import uet.oop.bomberman.graphics.Sprite;
+import javafx.scene.image.Image;
+import uet.oop.bomberman.entities.Entity;
+import uet.oop.bomberman.entities.bomb.Flame;
+/**
+ * Entity cố định có thể bị phá hủy
+ */
+public class DestroyableTile extends Tile {
+    //
+    private final int MAX_ANIMATE = 7500;
+    private int animate = 0;
+    protected boolean isDestroyed = false;
+    protected int timeAfter = 20;
+    protected Sprite belowSprite = Sprite.grass;
+
+    public DestroyableTile(int x, int y, Sprite sprite) {
+        super(x, y, sprite);
+    }
+
+    @Override
+    public void update() {
+        if (isDestroyed) {
+            animate = (animate + 1) % MAX_ANIMATE;
+            if (timeAfter > 0) {
+                timeAfter--;
+                if (timeAfter == 0) {
+                    remove();
+                }
+            }
+        }
+    }
+
+    @Override
+    public void render(Screen screen) {
+
+    }
+
+    public void destroy() {
+        isDestroyed = true;
+        sprite = Sprite.movingSprite(Sprite.brick_exploded, Sprite.brick_exploded1, Sprite.brick_exploded2, animate, 60);
+    }
+
+    @Override
+    public boolean collide(Entity e) {
+        if (e instanceof Flame) {
+            destroy();
+        }
+        return false;
+    }
+
+    public void addBelowSprite(Sprite sprite) {
+        belowSprite = sprite;
+    }
+
+    protected Sprite movingSprite(Sprite normal, Sprite x1, Sprite x2) {
+        int calc = animate % 60;
+        if (calc < 20) {
+            return normal;
+        }
+        if (calc < 40) {
+            return x1;
+        }
+        return x2;
+    }
+}
Index: src/main/java/uet/oop/bomberman/entities/tile/Tile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/tile/Tile.java b/src/main/java/uet/oop/bomberman/entities/tile/Tile.java
new file mode 100644
--- /dev/null	(date 1664203163489)
+++ b/src/main/java/uet/oop/bomberman/entities/tile/Tile.java	(date 1664203163489)
@@ -0,0 +1,36 @@
+package uet.oop.bomberman.entities.tile;
+
+import javafx.scene.image.Image;
+import uet.oop.bomberman.entities.Entity;
+import uet.oop.bomberman.graphics.Screen;
+import uet.oop.bomberman.graphics.Sprite;
+
+/**
+ * Entity cố định, không di chuyển
+ */
+public abstract class Tile extends Entity {
+    public Tile (int x, int y, Sprite sprite) {
+        super(x, y, sprite);
+    }
+
+    /**
+     * Mặc định không cho phép đối tượng đi qua
+     * @param e Entity va chạm
+     * @return true nếu có va chạm, false nếu không
+     */
+
+    @Override
+    public boolean collide(Entity e) {
+        return false;
+    }
+
+    @Override
+    public void update() {
+
+    }
+
+    @Override
+    public void render(Screen screen) {
+        screen.renderEntity(_x, _y, this);
+    }
+}
Index: src/main/java/uet/oop/bomberman/level/LevelLoader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/level/LevelLoader.java b/src/main/java/uet/oop/bomberman/level/LevelLoader.java
new file mode 100644
--- /dev/null	(date 1664201232488)
+++ b/src/main/java/uet/oop/bomberman/level/LevelLoader.java	(date 1664201232488)
@@ -0,0 +1,45 @@
+package uet.oop.bomberman.level;
+
+import uet.oop.bomberman.Board;
+import uet.oop.bomberman.exceptions.LoadLevelException;
+
+public abstract class LevelLoader {
+    protected int _width = 20, _height = 20;    // default level size for testing.
+    protected int _level = 1;
+    protected Board _board;
+
+    /**
+     * Constructor.
+     * @param level
+     */
+    public LevelLoader(Board board, int level) throws LoadLevelException {
+        _board = board;
+        loadLevel(level);
+    }
+
+    /**
+     * Load level from file.
+     * @param level
+     * @throws LoadLevelException
+     */
+    public abstract void loadLevel(int level) throws LoadLevelException;
+
+    /**
+     * create new entities.
+     * @return
+     */
+    public abstract void createEntities();
+
+    // getters.
+    public int getWidth() {
+        return _width;
+    }
+
+    public int getHeight() {
+        return _height;
+    }
+
+    public int getLevel() {
+        return _level;
+    }
+}
Index: src/main/java/uet/oop/bomberman/Board.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/Board.java b/src/main/java/uet/oop/bomberman/Board.java
new file mode 100644
--- /dev/null	(date 1664202376555)
+++ b/src/main/java/uet/oop/bomberman/Board.java	(date 1664202376555)
@@ -0,0 +1,86 @@
+package uet.oop.bomberman;
+
+import uet.oop.bomberman.graphics.Screen;
+import uet.oop.bomberman.entities.Entity;
+import uet.oop.bomberman.entities.Message;
+import uet.oop.bomberman.entities.bomb.Bomb;
+import uet.oop.bomberman.graphics.IRender;
+import uet.oop.bomberman.input.Keyboard;
+import uet.oop.bomberman.level.LevelLoader;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class Board implements IRender {
+    protected LevelLoader _levelLoader;
+    protected Game _game;
+    protected Keyboard _input;
+    protected Screen _screen;
+
+    public Entity[] entities;
+    public List<Character> _characters = new ArrayList<>();
+    public List<Bomb> _bombs = new ArrayList<>();
+    public List<Message> _messages = new ArrayList<>();
+
+    private int _screenToShow = -1;  // 1: Game Over, 2: Change Level, 3: Pause, 4: Win
+    private int _time = Game.TIME;
+    private int _points = Game.POINTS;
+
+    public Board(Game game, Keyboard input, Screen screen) {
+        _game = game;
+        _input = input;
+        _screen = screen;
+        loadLevel(1);   // start in level 1
+    }
+    @Override
+    public void update() {
+
+    }
+
+    @Override
+    public void render(Screen screen) {
+
+    }
+
+    public void loadLevel(int level) {
+        _time = Game.TIME;
+        _screenToShow = 2;
+    }
+
+    // getters and setters.
+    public int getWidth() {
+        return _levelLoader.getWidth();
+    }
+
+    public int getHeight() {
+        return _levelLoader.getHeight();
+    }
+
+    public int getLevel() {
+        return _levelLoader.getLevel();
+    }
+
+    public int getShow() {
+        return _screenToShow;
+    }
+
+    public void setShow(int show) {
+        _screenToShow = show;
+    }
+
+    public int getTime() {
+        return _time;
+    }
+
+    public int getPoints() {
+        return _points;
+    }
+
+    public void addPoints(int points) {
+        _points += points;
+    }
+
+    public Game getGame() {
+        return _game;
+    }
+}
Index: src/main/java/uet/oop/bomberman/graphics/IRender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/graphics/IRender.java b/src/main/java/uet/oop/bomberman/graphics/IRender.java
new file mode 100644
--- /dev/null	(date 1664202025442)
+++ b/src/main/java/uet/oop/bomberman/graphics/IRender.java	(date 1664202025442)
@@ -0,0 +1,7 @@
+package uet.oop.bomberman.graphics;
+
+public interface IRender {
+    void update();
+
+    void render(Screen screen);
+}
Index: src/main/java/uet/oop/bomberman/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/Game.java b/src/main/java/uet/oop/bomberman/Game.java
new file mode 100644
--- /dev/null	(date 1664201909307)
+++ b/src/main/java/uet/oop/bomberman/Game.java	(date 1664201909307)
@@ -0,0 +1,79 @@
+package uet.oop.bomberman;
+
+//import javafx.stage.Screen;
+import uet.oop.bomberman.input.Keyboard;
+import uet.oop.bomberman.graphics.Screen;
+
+import java.awt.*;
+import java.awt.image.BufferStrategy;
+import java.awt.image.BufferedImage;
+import java.awt.image.DataBufferInt;
+
+public class Game extends Canvas {
+    // TODO: Create the game attributes here
+    // Screen
+    public static final int TILES_SIZE = 16;
+    public static final int WIDTH = TILES_SIZE * (31 / 2);
+    public static final int HEIGHT = 13 * TILES_SIZE;
+    public static final int SCALE = 3;
+    public static final String TITLE = "Bomberman Game";
+
+    // Constaints attributes
+    private static final int BOMBRATE = 1;
+    private static final int BOMBRADIUS = 1;
+    private static final double BOMBERSPEED = 1.0; // bomber speed in tiles per second.
+
+    public static final int TIME = 200;
+    public static final int POINTS = 0;
+
+    protected static int SCREENDELAY = 3;
+
+    // Game attributes
+    protected static int bombRate = BOMBRATE;
+    protected static int bombRadius = BOMBRADIUS;
+    protected static double bomberSpeed = BOMBERSPEED;
+
+    protected int _screenDelay = SCREENDELAY;
+
+    private Keyboard _input;
+    private boolean isRunning = false;
+    private boolean isPaused = true;
+
+    private Board _board;
+    private Screen screen;
+    private Frame _frame;
+
+    private BufferedImage image = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);
+    private int[] pixels = ((DataBufferInt) image.getRaster().getDataBuffer()).getData();
+
+    public Game(Frame frame) {
+        _frame = frame;
+        _frame.setTitle(TITLE);
+
+        screen = new Screen(WIDTH, HEIGHT);
+        _input = new Keyboard();
+        _board = new Board(this, _input, screen);
+        addKeyListener(_input);
+    }
+
+    private void renderGame() {
+        BufferStrategy bs = getBufferStrategy();
+        if (bs == null) {
+            createBufferStrategy(3);
+            return;
+        }
+
+//        screen.clear();
+
+        _board.render(screen);
+
+        for (int i = 0; i < pixels.length; i++) {
+            pixels[i] = screen._pixels[i];
+        }
+
+        Graphics g = bs.getDrawGraphics();
+        g.drawImage(image, 0, 0, getWidth(), getHeight(), null);
+        g.dispose();
+        bs.show();
+    }
+}
\ No newline at end of file
Index: src/main/java/uet/oop/bomberman/exceptions/LoadLevelException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/exceptions/LoadLevelException.java b/src/main/java/uet/oop/bomberman/exceptions/LoadLevelException.java
new file mode 100644
--- /dev/null	(date 1664180633028)
+++ b/src/main/java/uet/oop/bomberman/exceptions/LoadLevelException.java	(date 1664180633028)
@@ -0,0 +1,18 @@
+package uet.oop.bomberman.exceptions;
+
+public class LoadLevelException extends GameException{
+    public LoadLevelException() {
+    }
+
+    public LoadLevelException(String message) {
+        super(message);
+    }
+
+    public LoadLevelException(String message, Throwable cause) {
+        super(message, cause);
+    }
+
+    public LoadLevelException(Throwable cause) {
+        super(cause);
+    }
+}
Index: src/main/java/uet/oop/bomberman/exceptions/GameException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/exceptions/GameException.java b/src/main/java/uet/oop/bomberman/exceptions/GameException.java
new file mode 100644
--- /dev/null	(date 1664180431108)
+++ b/src/main/java/uet/oop/bomberman/exceptions/GameException.java	(date 1664180431108)
@@ -0,0 +1,18 @@
+package uet.oop.bomberman.exceptions;
+
+public class GameException extends Exception {
+    public GameException() {
+    }
+
+    public GameException(String message) {
+        super(message);
+    }
+
+    public GameException(String message, Throwable cause) {
+        super(message, cause);
+    }
+
+    public GameException(Throwable cause) {
+        super(cause);
+    }
+}
\ No newline at end of file
Index: src/main/java/uet/oop/bomberman/entities/Message.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/Message.java b/src/main/java/uet/oop/bomberman/entities/Message.java
new file mode 100644
--- /dev/null	(date 1664181796889)
+++ b/src/main/java/uet/oop/bomberman/entities/Message.java	(date 1664181796889)
@@ -0,0 +1,4 @@
+package uet.oop.bomberman.entities;
+
+public class Message {
+}
Index: src/main/java/uet/oop/bomberman/graphics/Screen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/graphics/Screen.java b/src/main/java/uet/oop/bomberman/graphics/Screen.java
new file mode 100644
--- /dev/null	(date 1664202489156)
+++ b/src/main/java/uet/oop/bomberman/graphics/Screen.java	(date 1664202489156)
@@ -0,0 +1,120 @@
+package uet.oop.bomberman.graphics;
+
+import uet.oop.bomberman.Board;
+import uet.oop.bomberman.Game;
+import uet.oop.bomberman.entities.Entity;
+import uet.oop.bomberman.entities.character.Bomber;
+
+public class Screen {
+    protected int _width, _height;
+    public int[] _pixels;
+    private int _transparentColor = 0xff000000;
+
+    public static int xOffset = 0, yOffset = 0;
+
+    public Screen(int width, int height) {
+        _width = width;
+        _height = height;
+        _pixels = new int[width * height];
+    }
+
+    /**
+     * Clear screen.
+     */
+    public void clear() {
+        for (int i = 0; i < _pixels.length; i++) {
+            _pixels[i] = 0;
+        }
+    }
+
+    /**
+     * Render a sprite to the screen.
+     *
+     * @param xp
+     * @param yp
+     * @param entity
+     */
+    public void renderEntity(int xp, int yp, Entity entity) {
+        xp -= xOffset;
+        yp -= yOffset;
+        for (int y = 0; y < entity.getSprite().getSize(); y++) {
+            int ya = y + yp;    // add y position
+
+            for (int x = 0; x < entity.getSprite().getSize(); x++) {
+                int xa = x + xp;    // add x position
+                if (xa < -entity.getSprite().getSize() || xa >= _width || ya < 0 || ya >= _height) break;
+                if (xa < 0) xa = 0;
+                int color = entity.getSprite().getPixels(x + y * entity.getSprite().getSize());
+                if (color != _transparentColor) _pixels[xa + ya * _width] = color;
+            }
+        }
+    }
+
+    /**
+     * Render a sprite to the screen with a given size.
+     *
+     * @param xp
+     * @param yp
+     * @param entity
+     * @param below
+     */
+    public void renderEntityWithBelowSprite(int xp, int yp, Entity entity, Entity below) {
+        xp -= xOffset;
+        yp -= yOffset;
+        for (int y = 0; y < entity.getSprite().getSize(); y++) {
+            int ya = y + yp;    // add y position
+
+            for (int x = 0; x < entity.getSprite().getSize(); x++) {
+                int xa = x + xp;    // add x position
+                if (xa < -entity.getSprite().getSize() || xa >= _width || ya < 0 || ya >= _height) break;
+                if (xa < 0) xa = 0;
+                int color = entity.getSprite().getPixels(x + y * entity.getSprite().getSize());
+                if (color != _transparentColor) _pixels[xa + ya * _width] = color;
+                else {
+                    color = below.getSprite().getPixels(x + y * below.getSprite().getSize());
+                    if (color != _transparentColor) _pixels[xa + ya * _width] = color;
+                }
+            }
+        }
+    }
+
+    public static int calculateXOffset(Board board, Bomber bomber) {
+        if (bomber == null) return 0;
+        int temp = xOffset;
+        double bomberX = bomber.getX() / Game.TILES_SIZE;
+        double complement = 0.5;
+        int firstBreakpoint = board.getWidth() / 4;
+        int lastBreakpoint = board.getWidth() - firstBreakpoint;
+
+        if( bomberX > firstBreakpoint + complement && bomberX < lastBreakpoint - complement) {
+            temp = (int)bomber.getX()  - (Game.WIDTH / 2);
+        }
+
+        return temp;
+    }
+
+
+    // setters.
+    public static void setOffset(int xO, int yO) {
+        xOffset = xO;
+        yOffset = yO;
+    }
+
+
+    // getters.
+    public int getWidth() {
+        return _width;
+    }
+
+    public int getHeight() {
+        return _height;
+    }
+
+    public int getRealWidth() {
+        return _width * Game.SCALE;
+    }
+
+    public int getRealHeight() {
+        return _height * Game.SCALE;
+    }
+}
Index: src/main/java/uet/oop/bomberman/entities/bomb/Bomb.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/bomb/Bomb.java b/src/main/java/uet/oop/bomberman/entities/bomb/Bomb.java
new file mode 100644
--- /dev/null	(date 1664181741000)
+++ b/src/main/java/uet/oop/bomberman/entities/bomb/Bomb.java	(date 1664181741000)
@@ -0,0 +1,4 @@
+package uet.oop.bomberman.entities.bomb;
+
+public class Bomb {
+}
Index: src/main/java/uet/oop/bomberman/entities/tile/Wall.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/tile/Wall.java b/src/main/java/uet/oop/bomberman/entities/tile/Wall.java
new file mode 100644
--- /dev/null	(date 1664203198111)
+++ b/src/main/java/uet/oop/bomberman/entities/tile/Wall.java	(date 1664203198111)
@@ -0,0 +1,27 @@
+package uet.oop.bomberman.entities.tile;
+
+import javafx.scene.image.Image;
+import uet.oop.bomberman.entities.Entity;
+import uet.oop.bomberman.graphics.Screen;
+
+public class Wall extends Entity {
+
+    public Wall(int x, int y, Image img) {
+        super(x, y, img);
+    }
+
+    @Override
+    public void update() {
+
+    }
+
+    @Override
+    public void render(Screen screen) {
+
+    }
+
+    @Override
+    public boolean collide(Entity e) {
+        return false;
+    }
+}
\ No newline at end of file
Index: src/main/java/uet/oop/bomberman/graphics/Sprite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package uet.oop.bomberman.graphics;\n\nimport javafx.scene.image.*;\n\nimport java.awt.image.BufferedImage;\nimport java.nio.IntBuffer;\n\n/**\n * Lưu trữ thông tin các pixel của 1 sprite (hình ảnh game)\n */\npublic class Sprite {\n\n    public static final int DEFAULT_SIZE = 16;\n    public static final int SCALED_SIZE = DEFAULT_SIZE * 2;\n    private static final int TRANSPARENT_COLOR = 0xffff00ff;\n    public final int SIZE;\n    private int _x, _y;\n    public int[] _pixels;\n    protected int _realWidth;\n    protected int _realHeight;\n    private SpriteSheet _sheet;\n\n    /*\n    |--------------------------------------------------------------------------\n    | Board sprites\n    |--------------------------------------------------------------------------\n     */\n    public static Sprite grass = new Sprite(DEFAULT_SIZE, 6, 0, SpriteSheet.tiles, 16, 16);\n    public static Sprite brick = new Sprite(DEFAULT_SIZE, 7, 0, SpriteSheet.tiles, 16, 16);\n    public static Sprite wall = new Sprite(DEFAULT_SIZE, 5, 0, SpriteSheet.tiles, 16, 16);\n    public static Sprite portal = new Sprite(DEFAULT_SIZE, 4, 0, SpriteSheet.tiles, 14, 14);\n\n    /*\n    |--------------------------------------------------------------------------\n    | Bomber Sprites\n    |--------------------------------------------------------------------------\n     */\n    public static Sprite player_up = new Sprite(DEFAULT_SIZE, 0, 0, SpriteSheet.tiles, 12, 16);\n    public static Sprite player_down = new Sprite(DEFAULT_SIZE, 2, 0, SpriteSheet.tiles, 12, 15);\n    public static Sprite player_left = new Sprite(DEFAULT_SIZE, 3, 0, SpriteSheet.tiles, 10, 15);\n    public static Sprite player_right = new Sprite(DEFAULT_SIZE, 1, 0, SpriteSheet.tiles, 10, 16);\n\n    public static Sprite player_up_1 = new Sprite(DEFAULT_SIZE, 0, 1, SpriteSheet.tiles, 12, 16);\n    public static Sprite player_up_2 = new Sprite(DEFAULT_SIZE, 0, 2, SpriteSheet.tiles, 12, 15);\n\n    public static Sprite player_down_1 = new Sprite(DEFAULT_SIZE, 2, 1, SpriteSheet.tiles, 12, 15);\n    public static Sprite player_down_2 = new Sprite(DEFAULT_SIZE, 2, 2, SpriteSheet.tiles, 12, 16);\n\n    public static Sprite player_left_1 = new Sprite(DEFAULT_SIZE, 3, 1, SpriteSheet.tiles, 11, 16);\n    public static Sprite player_left_2 = new Sprite(DEFAULT_SIZE, 3, 2, SpriteSheet.tiles, 12 ,16);\n\n    public static Sprite player_right_1 = new Sprite(DEFAULT_SIZE, 1, 1, SpriteSheet.tiles, 11, 16);\n    public static Sprite player_right_2 = new Sprite(DEFAULT_SIZE, 1, 2, SpriteSheet.tiles, 12, 16);\n\n    public static Sprite player_dead1 = new Sprite(DEFAULT_SIZE, 4, 2, SpriteSheet.tiles, 14, 16);\n    public static Sprite player_dead2 = new Sprite(DEFAULT_SIZE, 5, 2, SpriteSheet.tiles, 13, 15);\n    public static Sprite player_dead3 = new Sprite(DEFAULT_SIZE, 6, 2, SpriteSheet.tiles, 16, 16);\n\n    /*\n    |--------------------------------------------------------------------------\n    | Character\n    |--------------------------------------------------------------------------\n     */\n    //BALLOM\n    public static Sprite balloom_left1 = new Sprite(DEFAULT_SIZE, 9, 0, SpriteSheet.tiles, 16, 16);\n    public static Sprite balloom_left2 = new Sprite(DEFAULT_SIZE, 9, 1, SpriteSheet.tiles, 16, 16);\n    public static Sprite balloom_left3 = new Sprite(DEFAULT_SIZE, 9, 2, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite balloom_right1 = new Sprite(DEFAULT_SIZE, 10, 0, SpriteSheet.tiles, 16, 16);\n    public static Sprite balloom_right2 = new Sprite(DEFAULT_SIZE, 10, 1, SpriteSheet.tiles, 16, 16);\n    public static Sprite balloom_right3 = new Sprite(DEFAULT_SIZE, 10, 2, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite balloom_dead = new Sprite(DEFAULT_SIZE, 9, 3, SpriteSheet.tiles, 16, 16);\n\n    //ONEAL\n    public static Sprite oneal_left1 = new Sprite(DEFAULT_SIZE, 11, 0, SpriteSheet.tiles, 16, 16);\n    public static Sprite oneal_left2 = new Sprite(DEFAULT_SIZE, 11, 1, SpriteSheet.tiles, 16, 16);\n    public static Sprite oneal_left3 = new Sprite(DEFAULT_SIZE, 11, 2, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite oneal_right1 = new Sprite(DEFAULT_SIZE, 12, 0, SpriteSheet.tiles, 16, 16);\n    public static Sprite oneal_right2 = new Sprite(DEFAULT_SIZE, 12, 1, SpriteSheet.tiles, 16, 16);\n    public static Sprite oneal_right3 = new Sprite(DEFAULT_SIZE, 12, 2, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite oneal_dead = new Sprite(DEFAULT_SIZE, 11, 3, SpriteSheet.tiles, 16, 16);\n\n    //Doll\n    public static Sprite doll_left1 = new Sprite(DEFAULT_SIZE, 13, 0, SpriteSheet.tiles, 16, 16);\n    public static Sprite doll_left2 = new Sprite(DEFAULT_SIZE, 13, 1, SpriteSheet.tiles, 16, 16);\n    public static Sprite doll_left3 = new Sprite(DEFAULT_SIZE, 13, 2, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite doll_right1 = new Sprite(DEFAULT_SIZE, 14, 0, SpriteSheet.tiles, 16, 16);\n    public static Sprite doll_right2 = new Sprite(DEFAULT_SIZE, 14, 1, SpriteSheet.tiles, 16, 16);\n    public static Sprite doll_right3 = new Sprite(DEFAULT_SIZE, 14, 2, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite doll_dead = new Sprite(DEFAULT_SIZE, 13, 3, SpriteSheet.tiles, 16, 16);\n\n    //Minvo\n    public static Sprite minvo_left1 = new Sprite(DEFAULT_SIZE, 8, 5, SpriteSheet.tiles, 16, 16);\n    public static Sprite minvo_left2 = new Sprite(DEFAULT_SIZE, 8, 6, SpriteSheet.tiles, 16, 16);\n    public static Sprite minvo_left3 = new Sprite(DEFAULT_SIZE, 8, 7, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite minvo_right1 = new Sprite(DEFAULT_SIZE, 9, 5, SpriteSheet.tiles, 16, 16);\n    public static Sprite minvo_right2 = new Sprite(DEFAULT_SIZE, 9, 6, SpriteSheet.tiles, 16, 16);\n    public static Sprite minvo_right3 = new Sprite(DEFAULT_SIZE, 9, 7, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite minvo_dead = new Sprite(DEFAULT_SIZE, 8, 8, SpriteSheet.tiles, 16, 16);\n\n    //Kondoria\n    public static Sprite kondoria_left1 = new Sprite(DEFAULT_SIZE, 10, 5, SpriteSheet.tiles, 16, 16);\n    public static Sprite kondoria_left2 = new Sprite(DEFAULT_SIZE, 10, 6, SpriteSheet.tiles, 16, 16);\n    public static Sprite kondoria_left3 = new Sprite(DEFAULT_SIZE, 10, 7, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite kondoria_right1 = new Sprite(DEFAULT_SIZE, 11, 5, SpriteSheet.tiles, 16, 16);\n    public static Sprite kondoria_right2 = new Sprite(DEFAULT_SIZE, 11, 6, SpriteSheet.tiles, 16, 16);\n    public static Sprite kondoria_right3 = new Sprite(DEFAULT_SIZE, 11, 7, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite kondoria_dead = new Sprite(DEFAULT_SIZE, 10, 8, SpriteSheet.tiles, 16, 16);\n\n    //ALL\n    public static Sprite mob_dead1 = new Sprite(DEFAULT_SIZE, 15, 0, SpriteSheet.tiles, 16, 16);\n    public static Sprite mob_dead2 = new Sprite(DEFAULT_SIZE, 15, 1, SpriteSheet.tiles, 16, 16);\n    public static Sprite mob_dead3 = new Sprite(DEFAULT_SIZE, 15, 2, SpriteSheet.tiles, 16, 16);\n\n    /*\n    |--------------------------------------------------------------------------\n    | Bomb Sprites\n    |--------------------------------------------------------------------------\n     */\n    public static Sprite bomb = new Sprite(DEFAULT_SIZE, 0, 3, SpriteSheet.tiles, 15, 15);\n    public static Sprite bomb_1 = new Sprite(DEFAULT_SIZE, 1, 3, SpriteSheet.tiles, 13, 15);\n    public static Sprite bomb_2 = new Sprite(DEFAULT_SIZE, 2, 3, SpriteSheet.tiles, 12, 14);\n\n    /*\n    |--------------------------------------------------------------------------\n    | FlameSegment Sprites\n    |--------------------------------------------------------------------------\n     */\n    public static Sprite bomb_exploded = new Sprite(DEFAULT_SIZE, 0, 4, SpriteSheet.tiles, 16, 16);\n    public static Sprite bomb_exploded1 = new Sprite(DEFAULT_SIZE, 0, 5, SpriteSheet.tiles, 16, 16);\n    public static Sprite bomb_exploded2 = new Sprite(DEFAULT_SIZE, 0, 6, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite explosion_vertical = new Sprite(DEFAULT_SIZE, 1, 5, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_vertical1 = new Sprite(DEFAULT_SIZE, 2, 5, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_vertical2 = new Sprite(DEFAULT_SIZE, 3, 5, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite explosion_horizontal = new Sprite(DEFAULT_SIZE, 1, 7, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_horizontal1 = new Sprite(DEFAULT_SIZE, 1, 8, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_horizontal2 = new Sprite(DEFAULT_SIZE, 1, 9, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite explosion_horizontal_left_last = new Sprite(DEFAULT_SIZE, 0, 7, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_horizontal_left_last1 = new Sprite(DEFAULT_SIZE, 0, 8, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_horizontal_left_last2 = new Sprite(DEFAULT_SIZE, 0, 9, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite explosion_horizontal_right_last = new Sprite(DEFAULT_SIZE, 2, 7, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_horizontal_right_last1 = new Sprite(DEFAULT_SIZE, 2, 8, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_horizontal_right_last2 = new Sprite(DEFAULT_SIZE, 2, 9, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite explosion_vertical_top_last = new Sprite(DEFAULT_SIZE, 1, 4, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_vertical_top_last1 = new Sprite(DEFAULT_SIZE, 2, 4, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_vertical_top_last2 = new Sprite(DEFAULT_SIZE, 3, 4, SpriteSheet.tiles, 16, 16);\n\n    public static Sprite explosion_vertical_down_last = new Sprite(DEFAULT_SIZE, 1, 6, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_vertical_down_last1 = new Sprite(DEFAULT_SIZE, 2, 6, SpriteSheet.tiles, 16, 16);\n    public static Sprite explosion_vertical_down_last2 = new Sprite(DEFAULT_SIZE, 3, 6, SpriteSheet.tiles, 16, 16);\n\n    /*\n    |--------------------------------------------------------------------------\n    | Brick FlameSegment\n    |--------------------------------------------------------------------------\n     */\n    public static Sprite brick_exploded = new Sprite(DEFAULT_SIZE, 7, 1, SpriteSheet.tiles, 16, 16);\n    public static Sprite brick_exploded1 = new Sprite(DEFAULT_SIZE, 7, 2, SpriteSheet.tiles, 16, 16);\n    public static Sprite brick_exploded2 = new Sprite(DEFAULT_SIZE, 7, 3, SpriteSheet.tiles, 16, 16);\n\n    /*\n    |--------------------------------------------------------------------------\n    | Powerups\n    |--------------------------------------------------------------------------\n     */\n    public static Sprite powerup_bombs = new Sprite(DEFAULT_SIZE, 0, 10, SpriteSheet.tiles, 16, 16);\n    public static Sprite powerup_flames = new Sprite(DEFAULT_SIZE, 1, 10, SpriteSheet.tiles, 16, 16);\n    public static Sprite powerup_speed = new Sprite(DEFAULT_SIZE, 2, 10, SpriteSheet.tiles, 16, 16);\n    public static Sprite powerup_wallpass = new Sprite(DEFAULT_SIZE, 3, 10, SpriteSheet.tiles, 16, 16);\n    public static Sprite powerup_detonator = new Sprite(DEFAULT_SIZE, 4, 10, SpriteSheet.tiles, 16, 16);\n    public static Sprite powerup_bombpass = new Sprite(DEFAULT_SIZE, 5, 10, SpriteSheet.tiles, 16, 16);\n    public static Sprite powerup_flamepass = new Sprite(DEFAULT_SIZE, 6, 10, SpriteSheet.tiles, 16, 16);\n\n    public Sprite(int size, int x, int y, SpriteSheet sheet, int rw, int rh) {\n        SIZE = size;\n        _pixels = new int[SIZE * SIZE];\n        _x = x * SIZE;\n        _y = y * SIZE;\n        _sheet = sheet;\n        _realWidth = rw;\n        _realHeight = rh;\n        load();\n    }\n\n    public Sprite(int size, int color) {\n        SIZE = size;\n        _pixels = new int[SIZE * SIZE];\n        setColor(color);\n    }\n\n    private void setColor(int color) {\n        for (int i = 0; i < _pixels.length; i++) {\n            _pixels[i] = color;\n        }\n    }\n\n    private void load() {\n        for (int y = 0; y < SIZE; y++) {\n            for (int x = 0; x < SIZE; x++) {\n                _pixels[x + y * SIZE] = _sheet._pixels[(x + _x) + (y + _y) * _sheet.SIZE];\n            }\n        }\n    }\n\n    public static Sprite movingSprite(Sprite normal, Sprite x1, Sprite x2, int animate, int time) {\n        int calc = animate % time;\n        int diff = time / 3;\n\n        if(calc < diff) {\n            return normal;\n        }\n\n        if(calc < diff * 2) {\n            return x1;\n        }\n\n        return x2;\n    }\n\n    public static Sprite movingSprite(Sprite x1, Sprite x2, int animate, int time) {\n        int diff = time / 2;\n        return (animate % time > diff) ? x1 : x2;\n    }\n\n    public int getSize() {\n        return SIZE;\n    }\n\n    public int getPixel(int i) {\n        return _pixels[i];\n    }\n\n    public Image getFxImage() {\n        WritableImage wr = new WritableImage(SIZE, SIZE);\n        PixelWriter pw = wr.getPixelWriter();\n        for (int x = 0; x < SIZE; x++) {\n            for (int y = 0; y < SIZE; y++) {\n                if ( _pixels[x + y * SIZE] == TRANSPARENT_COLOR) {\n                    pw.setArgb(x, y, 0);\n                }\n                else {\n                    pw.setArgb(x, y, _pixels[x + y * SIZE]);\n                }\n            }\n        }\n        Image input = new ImageView(wr).getImage();\n        return resample(input, SCALED_SIZE / DEFAULT_SIZE);\n    }\n\n    private Image resample(Image input, int scaleFactor) {\n        final int W = (int) input.getWidth();\n        final int H = (int) input.getHeight();\n        final int S = scaleFactor;\n\n        WritableImage output = new WritableImage(\n                W * S,\n                H * S\n        );\n\n        PixelReader reader = input.getPixelReader();\n        PixelWriter writer = output.getPixelWriter();\n\n        for (int y = 0; y < H; y++) {\n            for (int x = 0; x < W; x++) {\n                final int argb = reader.getArgb(x, y);\n                for (int dy = 0; dy < S; dy++) {\n                    for (int dx = 0; dx < S; dx++) {\n                        writer.setArgb(x * S + dx, y * S + dy, argb);\n                    }\n                }\n            }\n        }\n\n        return output;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/graphics/Sprite.java b/src/main/java/uet/oop/bomberman/graphics/Sprite.java
--- a/src/main/java/uet/oop/bomberman/graphics/Sprite.java	(revision 69a4a72e6b6edba31d24f48f315792cd6b96774e)
+++ b/src/main/java/uet/oop/bomberman/graphics/Sprite.java	(date 1664183270645)
@@ -240,7 +240,7 @@
         return SIZE;
     }
 
-    public int getPixel(int i) {
+    public int getPixels(int i) {
         return _pixels[i];
     }
 
Index: src/main/java/uet/oop/bomberman/entities/LayeredEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/LayeredEntity.java b/src/main/java/uet/oop/bomberman/entities/LayeredEntity.java
new file mode 100644
--- /dev/null	(date 1664203198118)
+++ b/src/main/java/uet/oop/bomberman/entities/LayeredEntity.java	(date 1664203198118)
@@ -0,0 +1,68 @@
+package uet.oop.bomberman.entities;
+
+import java.util.LinkedList;
+
+import javafx.scene.canvas.GraphicsContext;
+import javafx.scene.image.Image;
+import uet.oop.bomberman.graphics.Screen;
+import uet.oop.bomberman.graphics.Sprite;
+
+public class LayeredEntity extends Entity{
+    protected LinkedList<Entity> entities = new LinkedList<>();
+
+    // Khởi tạo đối tượng, chuyển từ tọa độ đơn vị sang tọa độ trong canvas
+    public LayeredEntity(int xUnit, int yUnit, Image img) {
+        super(xUnit, yUnit, img);
+    }
+
+    public LayeredEntity(int x, int y, Entity ... entities) {
+        super(x, y, (Image) null);
+        for (int i = 0; i < entities.length; i++) {
+            this.entities.add(entities[i]);
+//            if (i > 1){
+//
+//            }
+        }
+    }
+
+    /**
+     * Thêm một Entity vào LayeredEntity
+     */
+    @Override
+    public void update() {
+        clearRemoved();
+        getTopEntity().update();
+    }
+
+    @Override
+    public void render(Screen screen) {
+
+    }
+
+    @Override
+    public boolean collide(Entity e) {
+        // get top entity to check collision
+        return getTopEntity().collide(e);
+    }
+
+    @Override
+    public void render(GraphicsContext gc) {
+        getTopEntity().render(gc);
+    }
+
+    public Entity getTopEntity() {
+        return entities.getLast();
+    }
+
+    private void clearRemoved(){
+        Entity top = getTopEntity();
+        if(top.isRemoved()) {
+            entities.removeLast();
+        }
+    }
+
+    public void addBeforeTop(Entity e) {
+        clearRemoved();
+        entities.add(entities.size() - 1, e);
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"6e91c6b6-2304-4154-a53a-2c2137c5e94c\" name=\"Changes\" comment=\"'Fix bug start method'\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\n        <option name=\"useMavenConfig\" value=\"true\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"2FDOYgdNqhPY8xcqdNRzm6UQAAo\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/long/IdeaProjects/bomberman&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.propCompiler&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.Main\">\n    <configuration name=\"BombermanGame\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"uet.oop.bomberman.BombermanGame\" />\n      <module name=\"bomberban\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"uet.oop.bomberman.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"uet.oop.bomberman.Main\" />\n      <module name=\"bomberban\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"uet.oop.bomberman.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <module name=\"bomberman\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <module name=\"bomberman\" />\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.BombermanGame\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"6e91c6b6-2304-4154-a53a-2c2137c5e94c\" name=\"Changes\" comment=\"\" />\n      <created>1664023236964</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1664023236964</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"'Fix bug start method'\">\n      <created>1664172767224</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664172767224</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"'Fix bug start method'\">\n      <created>1664173485598</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664173485598</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"3\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"'Fix bug start method'\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"'Fix bug start method'\" />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/bomberman$BombermanGame.ic\" NAME=\"BombermanGame Coverage Results\" MODIFIED=\"1664165211628\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>uet.oop.bomberman.*</FILTER>\n    </SUITE>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 69a4a72e6b6edba31d24f48f315792cd6b96774e)
+++ b/.idea/workspace.xml	(date 1664203879584)
@@ -4,8 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6e91c6b6-2304-4154-a53a-2c2137c5e94c" name="Changes" comment="'Fix bug start method'">
+    <list default="true" id="6e91c6b6-2304-4154-a53a-2c2137c5e94c" name="Changes" comment="'Add class Keyboard.java to handle input events'">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/uet/oop/bomberman/BombermanGame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/uet/oop/bomberman/BombermanGame.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/uet/oop/bomberman/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/uet/oop/bomberman/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/uet/oop/bomberman/entities/Entity.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/uet/oop/bomberman/entities/Entity.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/uet/oop/bomberman/graphics/Sprite.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/uet/oop/bomberman/graphics/Sprite.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -15,6 +19,7 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
+        <option value="Interface" />
         <option value="Class" />
       </list>
     </option>
@@ -34,7 +39,9 @@
     </option>
   </component>
   <component name="ProjectId" id="2FDOYgdNqhPY8xcqdNRzm6UQAAo" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -45,12 +52,15 @@
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
     &quot;last_opened_file_path&quot;: &quot;/Users/long/IdeaProjects/bomberman&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;project.propCompiler&quot;
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;
   }
 }</component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$" />
+    </key>
+    <key name="ExtractSuperBase.RECENT_KEYS">
+      <recent name="uet.oop.bomberman.input" />
     </key>
   </component>
   <component name="RunManager" selected="Application.Main">
@@ -123,7 +133,14 @@
       <option name="project" value="LOCAL" />
       <updated>1664173485598</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="'Add class Keyboard.java to handle input events'">
+      <created>1664203341181</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1664203341181</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -131,7 +148,19 @@
       <map>
         <entry key="MAIN">
           <value>
-            <State />
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="main" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
           </value>
         </entry>
       </map>
@@ -139,7 +168,12 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="'Fix bug start method'" />
-    <option name="LAST_COMMIT_MESSAGE" value="'Fix bug start method'" />
+    <MESSAGE value="'Add class Keyboard.java to handle input events'" />
+    <option name="LAST_COMMIT_MESSAGE" value="'Add class Keyboard.java to handle input events'" />
+  </component>
+  <component name="XSLT-Support.FileAssociations.UIState">
+    <expand />
+    <select />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/bomberman$BombermanGame.ic" NAME="BombermanGame Coverage Results" MODIFIED="1664165211628" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
Index: src/main/java/uet/oop/bomberman/entities/tile/Grass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/tile/Grass.java b/src/main/java/uet/oop/bomberman/entities/tile/Grass.java
new file mode 100644
--- /dev/null	(date 1664203198106)
+++ b/src/main/java/uet/oop/bomberman/entities/tile/Grass.java	(date 1664203198106)
@@ -0,0 +1,32 @@
+package uet.oop.bomberman.entities.tile;
+
+import javafx.scene.image.Image;
+import uet.oop.bomberman.entities.Entity;
+import uet.oop.bomberman.graphics.Screen;
+
+public class Grass extends Entity {
+
+    public Grass(int x, int y, Image img) {
+        super(x, y, img);
+    }
+
+    @Override
+    public void update() {
+
+    }
+
+    @Override
+    public void render(Screen screen) {
+
+    }
+
+    /**
+     * Grass không có gì để render
+     * @param e
+     * @return
+     */
+    @Override
+    public boolean collide(Entity e) {
+        return true;
+    }
+}
\ No newline at end of file
Index: src/main/java/uet/oop/bomberman/entities/Bomber.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/Bomber.java b/src/main/java/uet/oop/bomberman/entities/character/Bomber.java
rename from src/main/java/uet/oop/bomberman/entities/Bomber.java
rename to src/main/java/uet/oop/bomberman/entities/character/Bomber.java
--- a/src/main/java/uet/oop/bomberman/entities/Bomber.java	(revision 69a4a72e6b6edba31d24f48f315792cd6b96774e)
+++ b/src/main/java/uet/oop/bomberman/entities/character/Bomber.java	(date 1664202980387)
@@ -1,10 +1,12 @@
-package uet.oop.bomberman.entities;
+package uet.oop.bomberman.entities.character;
 
 import javafx.scene.SnapshotParameters;
 import javafx.scene.canvas.GraphicsContext;
 import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
 import javafx.scene.paint.Color;
+import uet.oop.bomberman.entities.Entity;
+import uet.oop.bomberman.graphics.Screen;
 
 public class Bomber extends Entity {
 
@@ -16,4 +18,14 @@
     public void update() {
 
     }
+
+    @Override
+    public void render(Screen screen) {
+
+    }
+
+    @Override
+    public boolean collide(Entity e) {
+        return false;
+    }
 }
\ No newline at end of file
Index: src/main/java/uet/oop/bomberman/entities/Entity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package uet.oop.bomberman.entities;\n\nimport javafx.scene.SnapshotParameters;\nimport javafx.scene.canvas.GraphicsContext;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.paint.Color;\nimport uet.oop.bomberman.graphics.Sprite;\n\npublic abstract class Entity {\n    //Tọa độ X tính từ góc trái trên trong Canvas\n    protected int x;\n\n    //Tọa độ Y tính từ góc trái trên trong Canvas\n    protected int y;\n\n    protected Image img;\n\n    //Khởi tạo đối tượng, chuyển từ tọa độ đơn vị sang tọa độ trong canvas\n    public Entity( int xUnit, int yUnit, Image img) {\n        this.x = xUnit * Sprite.SCALED_SIZE;\n        this.y = yUnit * Sprite.SCALED_SIZE;\n        this.img = img;\n    }\n\n    public void render(GraphicsContext gc) {\n        gc.drawImage(img, x, y);\n    }\n    public abstract void update();\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/Entity.java b/src/main/java/uet/oop/bomberman/entities/Entity.java
--- a/src/main/java/uet/oop/bomberman/entities/Entity.java	(revision 69a4a72e6b6edba31d24f48f315792cd6b96774e)
+++ b/src/main/java/uet/oop/bomberman/entities/Entity.java	(date 1664202889397)
@@ -1,30 +1,91 @@
 package uet.oop.bomberman.entities;
 
-import javafx.scene.SnapshotParameters;
 import javafx.scene.canvas.GraphicsContext;
 import javafx.scene.image.Image;
-import javafx.scene.image.ImageView;
-import javafx.scene.paint.Color;
+import uet.oop.bomberman.graphics.IRender;
 import uet.oop.bomberman.graphics.Sprite;
 
-public abstract class Entity {
+/**
+ * Base class for all entities in the game
+ */
+public abstract class Entity implements IRender {
     //Tọa độ X tính từ góc trái trên trong Canvas
-    protected int x;
+    protected int _x;
 
     //Tọa độ Y tính từ góc trái trên trong Canvas
-    protected int y;
+    protected int _y;
 
+    protected boolean isRemoved = false;
+
+    // ảnh của entity
+    protected Sprite sprite;
     protected Image img;
 
-    //Khởi tạo đối tượng, chuyển từ tọa độ đơn vị sang tọa độ trong canvas
+    // Khởi tạo đối tượng, chuyển từ tọa độ đơn vị sang tọa độ trong canvas
     public Entity( int xUnit, int yUnit, Image img) {
-        this.x = xUnit * Sprite.SCALED_SIZE;
-        this.y = yUnit * Sprite.SCALED_SIZE;
+        _x = xUnit * Sprite.SCALED_SIZE;
+        _y = yUnit * Sprite.SCALED_SIZE;
         this.img = img;
     }
 
+    public Entity(int x, int y, Sprite sprite) {
+        _x = x;
+        _y = y;
+        this.sprite = sprite;
+    }
+
     public void render(GraphicsContext gc) {
-        gc.drawImage(img, x, y);
+        gc.drawImage(img, _x, _y);
     }
+
     public abstract void update();
+
+    /**
+     * Xử lý va chạm với Entity khác
+     *
+     * @param e
+     * @return
+     */
+    public abstract boolean collide(Entity e);
+
+    // getters & setters
+    public int getX() {
+        return _x;
+    }
+
+    public int getY() {
+        return _y;
+    }
+
+    public void setX(int x) {
+        _x = x;
+    }
+
+    public void setY(int y) {
+        _y = y;
+    }
+
+    public Sprite getSprite() {
+        return sprite;
+    }
+
+    public void setSprite(Sprite sprite) {
+        this.sprite = sprite;
+    }
+
+    public int getXUnit() {
+        return _x / Sprite.SCALED_SIZE;
+    }
+
+    public int getYUnit() {
+        return _y / Sprite.SCALED_SIZE;
+    }
+
+    public boolean isRemoved() {
+        return isRemoved;
+    }
+
+    public void remove() {
+        isRemoved = true;
+    }
 }
\ No newline at end of file
Index: src/main/java/uet/oop/bomberman/entities/AnimatedEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/uet/oop/bomberman/entities/AnimatedEntity.java b/src/main/java/uet/oop/bomberman/entities/AnimatedEntity.java
new file mode 100644
--- /dev/null	(date 1664176614000)
+++ b/src/main/java/uet/oop/bomberman/entities/AnimatedEntity.java	(date 1664176614000)
@@ -0,0 +1,17 @@
+package uet.oop.bomberman.entities;
+
+import javafx.scene.image.Image;
+
+public abstract class AnimatedEntity extends Entity{
+    // Instance variables
+    protected int animate = 0;
+    protected final int MAX_ANIMATE = 7500;
+
+    public AnimatedEntity(int xUnit, int yUnit, Image img) {
+        super(xUnit, yUnit, img);
+    }
+
+    protected void animate() {
+        animate = (animate + 1) % MAX_ANIMATE;
+    }
+}
